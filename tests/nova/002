#! /bin/bash
# FS QA Test No. nova/002
#
# Verify that mounted snapshots are read-only
#
#-----------------------------------------------------------------------
#
# Copyright (C) 2017 SUSE Linux Products GmbH. All Rights Reserved.
# Author: Filipe Manana <fdmanana@suse.com>
# Copyright 2015-2016 Regents of the University of California,
# UCSD Non-Volatile Systems Lab, Steven Swanson <swanson@cs.ucsd.edu>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it would be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write the Free Software Foundation,
# Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#-----------------------------------------------------------------------
#

seq=`basename $0`
seqres=$RESULT_DIR/$seq
echo "QA output created by $seq"

tmp=/tmp/$$
status=1	# failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

_cleanup()
{
	cd /
	rm -f $tmp.*
}

# get standard environment, filters and checks
. ./common/rc
. ./common/filter

# real QA test starts here
_supported_fs NOVA
_supported_os Linux
_require_test

rm -f $seqres.full


touch $TEST_DIR/unchangable
echo 1 > /proc/fs/NOVA/${TEST_DEV##/dev/}/create_snapshot
echo 1 > /proc/fs/NOVA/${TEST_DEV##/dev/}/create_snapshot

cat /proc/fs/NOVA/${TEST_DEV##/dev/}/snapshots >> $seqres.full 2>&1
len_before=$(cat /proc/fs/NOVA/${TEST_DEV##/dev/}/snapshots|wc -l)


if ! echo 1 |tee  /proc/fs/NOVA/${TEST_DEV##/dev/}/delete_snapshot  >> $seqres.full 2>&1 ; then
    echo 'Failed to delete snapshot (check 1).'
fi
cat /proc/fs/NOVA/${TEST_DEV##/dev/}/snapshots >> $seqres.full 2>&1
len_after=$(cat /proc/fs/NOVA/${TEST_DEV##/dev/}/snapshots|wc -l)

if [ $[len_after + 1] != $len_before ]; then
    echo 'Failed to delete snapshot (check 2).'
fi

_test_unmount
_test_mount -osnapshot=0 

if touch $TEST_DIR/uncreatable 2>/dev/null; then
    echo Created file on snapshot
fi


if echo changed | tee -a $TEST_DIR/unchangable >> $seqres.full 2>&1 ; then
    echo Modified read-only file
fi

if echo 1 | tee /proc/fs/NOVA/${TEST_DEV##/dev/}/create_snapshot >> $seqres.full 2>&1 ; then
    echo Created snapshot on read-only file system.
fi

if echo 1 | tee /proc/fs/NOVA/${TEST_DEV##/dev/}/delete_snapshot  >> $seqres.full 2>&1 ; then
    echo Deleted snapshot on read-only file system.
fi

_test_unmount

if df | grep -q $TEST_DEV; then
    echo "Didn't unmount"
fi

if _test_mount -osnapshot=4 >> $seqres.full 2>&1; then
    echo "Mounted non-existant snapshot (test 1)"
fi

if df | grep -q $TEST_DEV; then
    echo "Mounted non-existant snapshot (test 2)"
fi

echo Silence is golden

status=0
exit 
