#! /bin/bash
# FS QA Test No. nova/001
#
# Check that file size accounting only include file data pages and not also log pages.
#
#-----------------------------------------------------------------------
#
# Copyright (C) 2017 SUSE Linux Products GmbH. All Rights Reserved.
# Author: Filipe Manana <fdmanana@suse.com>
# Copyright 2015-2016 Regents of the University of California,
# UCSD Non-Volatile Systems Lab, Steven Swanson <swanson@cs.ucsd.edu>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it would be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write the Free Software Foundation,
# Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#-----------------------------------------------------------------------
#

seq=`basename $0`
seqres=$RESULT_DIR/$seq
echo "QA output created by $seq"

tmp=/tmp/$$
status=1	# failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

_cleanup()
{
	cd /
	rm -f $tmp.*
}

# get standard environment, filters and checks
. ./common/rc
. ./common/filter

# real QA test starts here
_supported_fs NOVA
_supported_os Linux
_require_scratch
_require_xfs_io_command "falloc" "-k"
_require_odirect

rm -f $seqres.full

_scratch_mkfs >>$seqres.full 2>&1
_scratch_mount

the_file=$SCRATCH_MNT/foo1
small_blocks="1 2 42 1234"
big_blocks="4096 4196 47009 $[1024*1024] $[4*4096+38]"

function go() {
    $XFS_IO_PROG -f -c "pwrite -b $bs 0 $[bs*count]" $SCRATCH_MNT/foo1 | _filter_xfs_io
    du -b $the_file | _filter_scratch
    du -k $the_file | _filter_scratch
}

for bs in  $small_blocks; do
    for count in 1 4 127 4222; do
	go
    done;
done


for bs in  $big_blocks; do
    for count in 1 4 16; do
	go
    done;
done

status=0
exit 

